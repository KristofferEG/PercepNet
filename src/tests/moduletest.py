from torch import nn
import sys
sys.path.append("../../")
import dump_percepnet

class PercepNet(nn.Module):
    def __init__(self, input_dim=70):
        super(PercepNet, self).__init__()
        
        self.fc = nn.Sequential(nn.Linear(2, 3), nn.Sigmoid())
        self.conv1 = nn.Conv1d(3, 5, 2, stride=1)
        self.gru1 = nn.GRU(2, 3, 1, batch_first=True)

if __name__ == '__main__':
    model = PercepNet()

    cfile = 'nnet_data.c'

    f = open(cfile, 'w')

    f.write('/*This file is automatically generated from a Pytorch model*/\n\n')
    f.write('#ifdef HAVE_CONFIG_H\n#include "config.h"\n#endif\n\n#include "nnet.h"\n#include "nnet_data.h"\n\n')

    for name, module in model.named_children():
        module.dump_data(f, name)